# Generated by Django 4.2.13 on 2024-05-31 10:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parameters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MiniAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('link', models.URLField(max_length=258, verbose_name='Ссылка')),
                ('small_image', models.ImageField(upload_to='', verbose_name='Для маленьких устройств')),
                ('medium_image', models.ImageField(upload_to='', verbose_name='Для средних устройств')),
                ('large_image', models.ImageField(upload_to='', verbose_name='Для больших устройств')),
                ('when_it_ends', models.DateTimeField(blank=True, default=None, null=True, verbose_name='До какого момента будет отображаться на сайте')),
            ],
            options={
                'verbose_name': 'Мини реклама',
                'verbose_name_plural': 'Мини реклама',
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='Название cтудии')),
                ('slug', models.SlugField(max_length=128)),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('description', models.TextField(verbose_name='Полное описание')),
                ('telegram', models.CharField(blank=True, max_length=128, verbose_name='Телеграм аккаунт')),
                ('website', models.URLField(blank=True, max_length=258, verbose_name='Ссылка на сайт')),
                ('phone', models.CharField(blank=True, max_length=40, verbose_name='Номер телефона')),
                ('english', models.BooleanField(default=False, verbose_name='Требуется ли знание английского')),
                ('min_age', models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(85)], verbose_name='Минимальный возраст модели')),
                ('max_age', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(85)], verbose_name='Максильмальный возраст модели')),
                ('min_percent', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)], verbose_name='Минимальный процент выплаты модели')),
                ('max_percent', models.IntegerField(default=90, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)], verbose_name='Максимальный процент выплаты модели')),
                ('operator', models.BooleanField(default=False, verbose_name='Наличие оператора')),
                ('is_it_premium', models.BooleanField(default=False, verbose_name='Это премиум размещение?')),
                ('contact_button_icon', models.CharField(blank=True, default='fa-solid fa-message', max_length=128, verbose_name='Иконка кнопки связаться для премиума')),
                ('contact_button_text', models.CharField(blank=True, default='Связаться', max_length=256, verbose_name='Текст кнопки связи для премиума')),
                ('contact_button_link', models.CharField(blank=True, default='#', max_length=128, verbose_name='Ссылка для кнопки связаться премиума')),
                ('is_it_top', models.BooleanField(default=False, verbose_name='Это TOP размещение?')),
                ('when_it_ends', models.DateTimeField(blank=True, default=None, null=True)),
                ('cities', models.ManyToManyField(to='parameters.city', verbose_name='Города работы')),
                ('experience', models.ManyToManyField(to='parameters.experiencechoices', verbose_name='Опыт работы')),
                ('format', models.ManyToManyField(to='parameters.formatchoices', verbose_name='Формат работы')),
                ('gender', models.ManyToManyField(to='parameters.genderchoices', verbose_name='Гендер')),
                ('payouts', models.ManyToManyField(to='parameters.payoutschoices', verbose_name='Выплаты')),
                ('shifts', models.ManyToManyField(to='parameters.shiftschoices', verbose_name='Смены')),
            ],
            options={
                'verbose_name': 'Студия',
                'verbose_name_plural': 'студии',
                'db_table': 'studio',
            },
        ),
    ]
